% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yaml_update.R
\name{yaml_update}
\alias{yaml_update}
\title{YAML Update}
\usage{
yaml_update(
  md_file = "inst/extdata/sample.md",
  method = list(tags = "merge", title = "overwrite"),
  yaml = list(title = "overwritten hello world", tags = "mynewtag3", unlikelyfield =
    "a-test"),
  unmentioned = c("keep", "discard"),
  output = md_file,
  ...
)
}
\arguments{
\item{md_file}{File with a YAML header.}

\item{method}{Either merge (key clashes result in lists), combine (new keys included, no overwriting), or overwrite (new yaml overwrites old). If a single "merge" or "overwrite" is provided, this will respectively (1) combine the two yamls provided (giving precedence to the new yaml over the md where keys conflict), OR (2) overwrite the file yaml with the new yaml entirely. Alternatively, a named list can be provided which indicates how each key should be combined (keys don't have to exist for this to work), as in c(title = "overwrite", author = "keep", tags = "merge")}

\item{yaml}{user value key pairs this should be in a list (NOT as yaml)}

\item{unmentioned}{If using a list of key-methods, how to treat keys not mentioned; discard, or keep (if kept, defaults to 'overwrite' method from new yaml). Merge keeps md yaml that isn't overwritten. Overwrite discards.}

\item{output}{Specify if a different file should be written. Defaults to input file.}

\item{...}{at some point may be useful to pass other args.}
}
\value{
File with a YAML header.
}
\description{
Updates YAML header in file given user YAML key value pairs.
}
